/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const ResourcesLazyImport = createFileRoute('/resources')()
const GuideIndexLazyImport = createFileRoute('/guide/')()
const GuideSwitchesLazyImport = createFileRoute('/guide/switches')()
const GuideStabilizersLazyImport = createFileRoute('/guide/stabilizers')()
const GuideKitsLazyImport = createFileRoute('/guide/kits')()
const GuideKeycapsLazyImport = createFileRoute('/guide/keycaps')()
const GuideIntroLazyImport = createFileRoute('/guide/intro')()

// Create/Update Routes

const ResourcesLazyRoute = ResourcesLazyImport.update({
  path: '/resources',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/resources.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GuideIndexLazyRoute = GuideIndexLazyImport.update({
  path: '/guide/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guide/index.lazy').then((d) => d.Route))

const GuideSwitchesLazyRoute = GuideSwitchesLazyImport.update({
  path: '/guide/switches',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/guide/switches.lazy').then((d) => d.Route),
)

const GuideStabilizersLazyRoute = GuideStabilizersLazyImport.update({
  path: '/guide/stabilizers',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/guide/stabilizers.lazy').then((d) => d.Route),
)

const GuideKitsLazyRoute = GuideKitsLazyImport.update({
  path: '/guide/kits',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guide/kits.lazy').then((d) => d.Route))

const GuideKeycapsLazyRoute = GuideKeycapsLazyImport.update({
  path: '/guide/keycaps',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guide/keycaps.lazy').then((d) => d.Route))

const GuideIntroLazyRoute = GuideIntroLazyImport.update({
  path: '/guide/intro',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guide/intro.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/resources': {
      preLoaderRoute: typeof ResourcesLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide/intro': {
      preLoaderRoute: typeof GuideIntroLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide/keycaps': {
      preLoaderRoute: typeof GuideKeycapsLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide/kits': {
      preLoaderRoute: typeof GuideKitsLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide/stabilizers': {
      preLoaderRoute: typeof GuideStabilizersLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide/switches': {
      preLoaderRoute: typeof GuideSwitchesLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide/': {
      preLoaderRoute: typeof GuideIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ResourcesLazyRoute,
  GuideIntroLazyRoute,
  GuideKeycapsLazyRoute,
  GuideKitsLazyRoute,
  GuideStabilizersLazyRoute,
  GuideSwitchesLazyRoute,
  GuideIndexLazyRoute,
])

/* prettier-ignore-end */
